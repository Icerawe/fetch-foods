import streamlit as st
import pandas as pd
import json

import notify
import time
from streamlit_image_select import image_select

# Menu items
menu = {
    "‡πÄ‡∏≠‡πá‡∏ô‡πÑ‡∏Å‡πà‡∏ó‡∏≠‡∏î": 50,
    "‡πÄ‡∏ü‡∏£‡∏ô‡∏ä‡πå‡∏ü‡∏£‡∏≤‡∏¢": 50,
    "‡∏Å‡∏£‡∏µ‡∏Å‡πÇ‡∏¢‡πÄ‡∏Å‡∏¥‡∏£‡πå‡∏ï": 50
}

# Display menu options
st.title("üçü Jupp Gam")
st.subheader("‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞")
df_menu = pd.DataFrame([menu]).T.reset_index()
df_menu.index = range(1,len(df_menu)+1)
df_menu.columns = ["‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£", "‡∏£‡∏≤‡∏Ñ‡∏≤(‡∏ö‡∏≤‡∏ó)"]
st.write(df_menu)

# img = image_select("‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö", ["image/ch.jpg", "image/ff.jpg", "image/yg.jpg"],)


# User input
name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ :")
if len(name.strip())>0:

    if 'selected_value' not in st.session_state:
        # Initialize the 'selected_value' key with the default value
        st.session_state.selected_item = None

    selected_item = st.selectbox(label="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£",options=[""]+list(menu.keys()))
    quantity = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô", min_value=1, value=1)
    add_to_cart = st.button("‡πÉ‡∏™‡πà‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÄ‡∏•‡∏¢ :basket:")

    # Initialize session state
    if 'orders' not in st.session_state:
        st.session_state.orders = []

    # Process order
    if add_to_cart and selected_item != "":
        total_price = menu[selected_item] * quantity
        st.success(f"‡πÄ‡∏û‡∏¥‡πà‡∏° {selected_item} {quantity} ‡∏ä‡∏∏‡∏î ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏≤‡∏Ñ‡∏≤: {total_price:.2f} ‡∏ö‡∏≤‡∏ó")
        st.session_state.orders.append({
            "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£": selected_item,
            "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô": quantity,
            "‡∏£‡∏≤‡∏Ñ‡∏≤": total_price
        })
        st.session_state.selected_item = None
        if st.session_state.selected_item is not None:
            selected_item = st.session_state.selected_item

    if len(st.session_state.orders) > 0:
        st.subheader(f"‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: {name}")
        df = pd.DataFrame(st.session_state.orders)
        df.index = range(1,len(df)+1)
        st.dataframe(df)
        price = df['‡∏£‡∏≤‡∏Ñ‡∏≤'].sum()

        phone = st.text_input(label="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö")
        if len(phone)==10:
            qr_code = st.button("‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô :moneybag:")
            if qr_code:
                st.success(f"‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {len(df)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {price} ‡∏ö‡∏≤‡∏ó")

                st.image(f"image/prompt_pay.png",width=250)
                st.image(f"https://promptpay.io/{st.secrets['prompt_pay']}/{price}.png", width=250)
                st.text("‡∏Å‡∏£‡∏ì‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö")
                notify.send(
                    message=f"‡∏Ñ‡∏∏‡∏ì {name}\n {df}\n ‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞ {price} ‡∏ö‡∏≤‡∏ó\n ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ {phone}",
                    token=st.secrets['token']
                )

        reset_order = st.button("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        if reset_order:
            name = ""
            st.session_state.orders = []
            st.error(f"‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì {name} ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÇ‡∏ó‡∏£: {st.phone}")
            df = pd.DataFrame(st.session_state.orders)
            df.index = range(1,len(df)+1)
            time.sleep(1)
            st.experimental_rerun()
