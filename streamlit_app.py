import streamlit as st
import pandas as pd
from PIL import Image 

import notify
import time
import json
import io




if 'selected_value' not in st.session_state:
    st.session_state.selected_item = None
if 'orders' not in st.session_state:
    st.session_state.orders = []
if 'uploaded_file' not in st.session_state:
    st.session_state.uploaded_file = None
if 'qr_code' not in st.session_state:
    st.session_state.qr_code = True


st.image('image/banner.jpeg')
if st.secrets['is_open']:
    st.text(f"""
        ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏±‡πà‡∏á ‡πÅ‡∏•‡∏∞ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
        ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô ‡∏´‡∏à‡∏Å.‡∏°‡∏µ‡∏î‡∏µ‡∏Å‡∏£‡∏µ/‡∏£‡πâ‡∏≤‡∏ô‡∏Å‡πã‡∏ß‡∏¢‡πÄ‡∏ï‡∏µ‡πã‡∏¢‡∏ß‡∏•‡∏∏‡∏á
        ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ ‡πÇ‡∏ó‡∏£. {st.secrets['phone']}""")

    menu = st.secrets['menu']
    st.write("\n")

    menu_list = [f"{key}: {value}‡∏ø" for key,value in menu.items()]
    selected_item = st.selectbox(label="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£",options=["‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π"]+menu_list, index=0)
    selected_item = selected_item.split(":")[0]
    topping = ""
    if "‡∏Å‡∏£‡∏µ‡∏Å‡πÇ‡∏¢‡πÄ‡∏Å‡∏¥‡∏£‡πå‡∏ï + ‡∏ó‡πä‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á + ‡∏ú‡∏•‡πÑ‡∏°‡πâ"==selected_item:
        topping = st.multiselect(
            label="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡πá‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á‡πÑ‡∏î‡πâ 3 ‡∏≠‡∏¢‡πà‡∏≤‡∏á",
            options=st.secrets['topping'],
            max_selections=3,
        )
        topping = ','.join(topping)

    if "‡∏Å‡∏£‡∏µ‡∏Å‡πÇ‡∏¢‡πÄ‡∏Å‡∏¥‡∏£‡πå‡∏ï" in selected_item:
        sauce = st.radio(
            label="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ã‡∏≠‡∏™",
            options=st.secrets['sauce'],
        )
        if sauce == '‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà':
            sauce = ""
        else:
            sauce = f"‡∏£‡∏≤‡∏î{sauce}"
        order_name = f"{selected_item} {topping} {sauce}"
    else:
        order_name = selected_item

    quantity = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô", min_value=1, value=1)
    add_to_cart = st.button("‚úÖ  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

    # add_to_cart = st.button("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£")
    if add_to_cart and selected_item != "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π":
        price = menu[selected_item] * quantity
        st.success(f"""* ‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢""")

        st.session_state.orders.append({
            "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£": order_name,
            "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô": quantity,
            "‡∏£‡∏≤‡∏Ñ‡∏≤": price
        })

    reset_order = st.button("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    if reset_order:
        name = ""
        st.session_state.orders = []
        st.error(f"‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
        df = pd.DataFrame(st.session_state.orders)
        df.index = range(1,len(df)+1)
        time.sleep(1)
        st.experimental_rerun()

    if len(st.session_state.orders) > 0:
        st.markdown("###### ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á")
        df = pd.DataFrame(st.session_state.orders)
        df.index = range(1,len(df)+1)
        st.dataframe(df)
        total_price = df['‡∏£‡∏≤‡∏Ñ‡∏≤'].sum()
        st.info(f"‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£ {len(df)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {total_price} ‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏±‡∏ö")
        remark = st.text_input(label="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)")

        name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ :", )
        phone = st.text_input(label="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö (‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠)")
        qr_code = st.button("üí∞ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô")
        qr_code = True
        if qr_code and len(name.strip())>0:
            st.image(f"image/prompt_pay.png",width=250)
            st.image(f"https://promptpay.io/{st.secrets['prompt_pay']}/{total_price}.png", width=250)
        else:
            st.warning(f"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠ ‡πÅ‡∏•‡∏∞ ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£")

        uploaded_file = st.file_uploader("‡∏≠‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î")

        done = st.button("‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
        if done and (uploaded_file is not None):
            st.info(f"‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö")
            image = Image.open(uploaded_file)
            # width, height = 1290, 2134
            # image = image.resize((width, height))
            image_bytes = io.BytesIO()
            image.save(image_bytes, format='PNG')
            menu_message = ""
            for order, quantity in zip(df['‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£'], df['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô']):
                menu_message += f"{order}: \t[{quantity}]\n"

            order_name = f"*‡∏Ñ‡∏∏‡∏ì {name}*"
            order_contact = f"‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: {phone}"
            order_price = f"‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞:{total_price} ‡∏ö‡∏≤‡∏ó"
            order_list = f"‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£ \n```{menu_message}```"
            order_remark = f"‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: `{remark}`"
            notify.send_message(
                message=f"{order_name}\n{order_contact}\n{order_price}\n{order_list}\n{order_remark}",
                files={"imageFile": image_bytes.getvalue()},
                token=st.secrets['token']
            )

            name = ""
            st.session_state.orders = []
            df = pd.DataFrame(st.session_state.orders)
            df.index = range(1,len(df)+1)
            time.sleep(2)
            st.experimental_rerun()
        elif uploaded_file is None:
            st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î ‡∏™‡∏•‡∏¥‡∏õ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå")
else:
    st.header("‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡πâ‡∏≤‡∏ô‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö üôè")


